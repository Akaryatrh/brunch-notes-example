(function(){"use strict";var e=typeof window!="undefined"?window:global;if(typeof e.require=="function")return;var t={},n={},r=function(e,t){return{}.hasOwnProperty.call(e,t)},i=function(e,t){var n=[],r,i;/^\.\.?(\/|$)/.test(t)?r=[e,t].join("/").split("/"):r=t.split("/");for(var s=0,o=r.length;s<o;s++)i=r[s],i===".."?n.pop():i!=="."&&i!==""&&n.push(i);return n.join("/")},s=function(e){return e.split("/").slice(0,-1).join("/")},o=function(t){return function(n){var r=s(t),o=i(r,n);return e.require(o)}},u=function(e,t){var r={id:e,exports:{}};t(r.exports,o(e),r);var i=n[e]=r.exports;return i},a=function(e){var s=i(e,".");if(r(n,s))return n[s];if(r(t,s))return u(s,t[s]);var o=i(s,"./index");if(r(n,o))return n[o];if(r(t,o))return u(o,t[o]);throw new Error('Cannot find module "'+e+'"')},f=function(e){for(var n in e)r(e,n)&&(t[n]=e[n])};e.require=a,e.require.define=f,e.require.brunch=!0})(),window.require.define({"test/models/note":function(e,t,n){var r;r=t("models/note"),buster.spec.expose(),describe("[app.models.Note]",function(){return beforeEach(function(){return this.model=new r}),afterEach(function(){return this.model=null}),it("should have defaults",function(){return expect(this.model.attributes.title).toBe("Click to edit"),expect(this.model.attributes.content).toBe("Note content"),expect(this.model.attributes.current).toBe(!1)})})}}),window.require.define({"test/models/notes":function(e,t,n){var r,i;r=t("models/notes"),i=t("application"),buster.spec.expose(),describe("[app.models.notes]",function(){return beforeEach(function(){return i.initialize(),this.notes=i.notes}),afterEach(function(){return localStorage.clear()}),it("should check for initialized localStorage",function(){return expect(typeof this.notes.localStorage).toBe("object")})})}}),window.require.define({"test/spec":function(e,t,n){}}),window.require.define({"test/views/new_note_view":function(e,t,n){var r,i;i=t("models/note"),r=t("views/new_note_view"),buster.spec.expose(),describe("[views.NewNoteView]",function(){return beforeEach(function(){return this.view=new r}),afterEach(function(){return localStorage.clear()}),it("should render the note",function(){var e;return e=this.view.render().el,expect($(e).find("#add-note").length).toBe(1)})})}}),window.require.define({"test/views/note_list_view":function(e,t,n){var r,i,s;r=t("models/note"),i=t("views/note_list_view"),s=t("application"),buster.spec.expose(),describe("[views.NoteListView]",function(){return beforeEach(function(){return s.initialize(),this.view=new i}),afterEach(function(){return localStorage.clear()}),it("should render the note list",function(){var e;return e=this.view.render().el,expect($(e).find("ul").length).toBe(1),expect($(e).find("li#add-note").length).toBe(1)}),it("should add one note",function(){var e;return e=this.view.render().el,expect($(e).find("li").length).toBe(1),this.view.addOne(new r),expect($(e).find("li").length).toBe(2)})})}}),window.require.define({"test/views/note_view":function(e,t,n){var r,i;r=t("models/note"),i=t("views/note_view"),buster.spec.expose(),describe("[views.NoteView]",function(){return beforeEach(function(){return this.model=new r,this.view=new i({model:this.model})}),afterEach(function(){return localStorage.clear()}),it("should initialize view",function(){return expect(typeof this.view.model._callbacks.change).toBe("object"),expect(typeof this.view.model.view).toBe("object")}),it("should render the note",function(){var e;return e=this.view.render().el,expect($(e).find(".note").length).toBe(1),expect($(e).find(".delete").length).toBe(1)})})}}),window.require.define({"test/views/notepad_view":function(e,t,n){var r,i,s;r=t("models/note"),i=t("views/notepad_view"),s=t("application"),buster.spec.expose(),describe("[views.NotepadView]",function(){return beforeEach(function(){return s.initialize(),this.view=new i}),afterEach(function(){return localStorage.clear()}),it("should render the note list",function(){var e;return e=this.view.render().el,expect($(e).find("#note-input").length).toBe(1)}),it("should show note content",function(){var e,t;return e=this.view.render().el,t=new r({title:"TITLE",content:"CONTENT"}),this.view.showNoteContent(t),expect($(e).find("#note-input").text()).toBe("CONTENT")})})}})